import assert from 'assert'
import arrGammaFit from '../src/arrGammaFit.mjs'


describe(`arrGammaFit`, function() {

    let k
    let kpArr = {}
    let kpOpt = {}
    let kpOut = {}

    k = 0
    kpArr[k] = [12, 36, 9, 13, 6, 17, 7, 12, 31, 57, 44, 32, 16, 11, 10, 38, 31, 28, 26, 7, 16, 16, 16, 13, 7, 8, 12, 17, 11, 20, 7, 6, 14, 7, 37, 11, 7, 8, 8, 32, 29, 52, 20, 6, 11, 12, 33, 48, 10, 27, 11, 24, 17, 11, 23, 20, 13, 16, 16, 17, 13, 15, 13, 26, 11, 13, 29, 18, 18, 13, 11, 12, 9, 17, 19, 14, 19, 9, 37, 32, 14, 20, 13, 22, 12, 14, 33, 15, 20, 37, 24, 19, 15, 15, 5, 11, 13, 60, 39, 17, 6, 18, 40, 21, 18, 17, 12, 12, 10, 39, 27, 10, 8, 44, 36, 18, 11, 8, 13, 9, 25, 11, 10, 55, 54, 13, 8, 19, 38, 9, 17, 14, 9, 12, 54, 22, 11, 19, 50, 18, 12, 40, 52, 12, 15, 7, 12, 15, 18, 19, 11, 43, 23, 14, 25, 32, 23, 15, 12, 20, 14, 10, 12, 24, 50, 40, 16, 14, 9, 27, 9, 11, 17, 19, 12, 17, 14, 5, 24, 22, 60, 20, 9, 11, 11, 6, 7, 8, 31, 10, 12, 9, 11, 26, 14, 7, 14, 57, 19, 9, 10, 9, 19, 19, 15, 21, 48, 23, 26, 14, 46, 51, 10, 10, 9, 7, 19, 46, 27, 18, 12, 10, 36, 15, 5, 11, 13, 21, 15, 15, 16, 29, 44, 42, 7, 14, 9, 6, 22, 24, 18, 39, 7, 50, 33, 11, 20, 17, 18, 48, 8, 21, 20, 12, 41, 11, 18, 11, 58, 18, 21, 23, 12, 67, 35]
    kpOpt[k] = {
        n: 69,
        min: 1,
        max: 70,
    }
    kpOut[k] = {
        arrCounts: [
            [1.5, 0, 0.5391538687486649],
            [2.5, 0, 1.7962366549396136],
            [3.5, 0, 3.6496228281644183],
            [4.5, 3, 5.8241969598371295],
            [5.5, 6, 8.050850888970505],
            [6.5, 12, 10.116702459548634],
            [7.5, 8, 11.87765914367292],
            [8.5, 14, 13.253399694878366],
            [9.5, 11, 14.215288530920441],
            [10.5, 21, 14.772679099506087],
            [11.5, 19, 14.960261704970373],
            [12.5, 12, 14.827558250265724],
            [13.5, 13, 14.430829942813553],
            [14.5, 11, 13.827242726898026],
            [15.5, 8, 13.07095155953816],
            [16.5, 11, 12.210712745510621],
            [17.5, 12, 11.288650328503703],
            [18.5, 11, 10.339851012584218],
            [19.5, 9, 9.39252121880613],
            [20.5, 5, 8.468498318091852],
            [21.5, 4, 7.583960280136492],
            [22.5, 5, 6.750221777228556],
            [23.5, 5, 5.9745399025179875],
            [24.5, 2, 5.2608797942579475],
            [25.5, 4, 4.610610715596152],
            [26.5, 4, 4.023117751242098],
            [27.5, 1, 3.496324420399798],
            [28.5, 3, 3.027128206691178],
            [29.5, 0, 2.6117551424982124],
            [30.5, 3, 2.2460418640307847],
            [31.5, 4, 1.9256545303972914],
            [32.5, 3, 1.6462541008256864],
            [33.5, 0, 1.4036170069784626],
            [34.5, 1, 1.1937194734611656],
            [35.5, 3, 1.0127927927869],
            [36.5, 3, 0.8573558630200342],
            [37.5, 2, 0.7242303200818259],
            [38.5, 3, 0.6105426869017874],
            [39.5, 3, 0.5137171426696564],
            [40.5, 1, 0.4314617978258695],
            [41.5, 1, 0.3617507452461212],
            [42.5, 1, 0.3028036405593052],
            [43.5, 3, 0.25306413648863774],
            [44.5, 0, 0.2111781476150444],
            [45.5, 2, 0.17597264257921433],
            [46.5, 0, 0.146435440227838],
            [47.5, 3, 0.12169631500919359],
            [48.5, 0, 0.10100958639922931],
            [49.5, 3, 0.08373826969261944],
            [50.5, 1, 0.06933979457326575],
            [51.5, 2, 0.05735324793605729],
            [52.5, 0, 0.04738806383690151],
            [53.5, 2, 0.03911406239201894],
            [54.5, 1, 0.03225272783707576],
            [55.5, 0, 0.026569611311524],
            [56.5, 2, 0.021867744289820357],
            [57.5, 1, 0.017981952404664568],
            [58.5, 0, 0.014773965516155646],
            [59.5, 2, 0.012128227378694569],
            [60.5, 0, 0.009948316477537654],
            [61.5, 0, 0.008153898063560708],
            [62.5, 0, 0.006678135764514467],
            [63.5, 0, 0.005465499160085078],
            [64.5, 0, 0.004469911226282276],
            [65.5, 0, 0.0036531864946155574],
            [66.5, 1, 0.002983717091817672],
            [67.5, 0, 0.002435369518254178],
            [68.5, 0, 0.0019865601023468047],
            [69.5, 0, 0.0016194815643743841]
        ]
    }
    it(`should return ${JSON.stringify(kpOut[k])} when input ${JSON.stringify(kpArr[k])}, ${JSON.stringify(kpOpt[k])}`, async function() {
        let k = 0
        let r = await arrGammaFit(kpArr[k], kpOpt[k])
        r = r.arrCounts
        let rr = kpOut[k]
        rr = rr.arrCounts
        assert.strict.deepStrictEqual(r, rr)
    })

})
